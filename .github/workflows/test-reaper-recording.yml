name: Test REAPER Recording in Headless Mode

on:
  workflow_dispatch:
  push:

env:
  REAPER_MAJOR_VERSION: 7
  REAPER_MINOR_VERSION: 48
  WDL_COMMIT: "3024ec8e000f769454b5ee4ac927dc5cecfc6a6b"
  ACTIONS_CACHE_VERSION: "0"

jobs:
  test-recording:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        wdl_build: [stock, custom]
      fail-fast: false
    
    name: test-recording (${{ matrix.wdl_build }} libSwell)
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb build-essential libx11-dev libglib2.0-0 libgtk-3-0 xz-utils git cmake

      - name: Download REAPER
        env:
          REAPER_DOWNLOAD_URL: "https://www.reaper.fm/files/${{ env.REAPER_MAJOR_VERSION }}.x/reaper${{ env.REAPER_MAJOR_VERSION }}${{ env.REAPER_MINOR_VERSION }}_linux_x86_64.tar.xz"
        run: |
          mkdir -p "$GITHUB_WORKSPACE/tmp_reaper"
          wget -O "$GITHUB_WORKSPACE/tmp_reaper/reaper.tar.xz" $REAPER_DOWNLOAD_URL

      - name: Extract and install REAPER
        run: |
          cd "$GITHUB_WORKSPACE/tmp_reaper"
          tar xf reaper.tar.xz
          cd reaper_linux_x86_64
          ./install-reaper.sh --install "$GITHUB_WORKSPACE/reaper_install" --integrate-user-desktop --usr-local-bin-symlink
          echo "$GITHUB_WORKSPACE/reaper_install/REAPER" >> $GITHUB_PATH

      - name: Build WDL headless and install custom libSwell.so
        if: matrix.wdl_build == 'custom'
        run: |
          git clone https://github.com/justinfrankel/WDL.git "$GITHUB_WORKSPACE/tmp_wdl_src"
          cd "$GITHUB_WORKSPACE/tmp_wdl_src"
          git checkout ${WDL_COMMIT}
          cd WDL/swell
          make NOGDK=1 -Wno-error
          cp "$(pwd)/libSwell.so" "$GITHUB_WORKSPACE/reaper_install/REAPER/libSwell.so"
          echo "Custom libSwell.so installed"

      - name: Start Xvfb
        run: |
          export DISPLAY=:99
          Xvfb :99 -screen 0 1024x768x24 &
          sleep 2

      - name: Run recording test
        env:
          DISPLAY: :99
        run: |
          bash scripts/test_reaper_recording.sh

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: recording-test-results-${{ matrix.wdl_build }}
          path: /tmp/reaper_recording_test.log
